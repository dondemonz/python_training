{
  "defectsList" : [ {
    "title" : "Product defects",
    "status" : "FAILED",
    "defects" : [ {
      "uid" : "904759950b96f783",
      "failure" : {
        "message" : "AssertionError: assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\n  Left contains more items, first extra item: None:::\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x043E3410>\ndb = <fixture.db.DbFixture object at 0x03436AD0>, json_groups = None:::\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(\"When I add the group %s to the list\" % group):\n            app.group.create(group)\n        time.sleep(2)\n        with pytest.allure.step(\"the new group list is equal to the old list with added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\nE             Left contains more items, first extra item: None:::\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:17: AssertionError"
      },
      "testCases" : [ {
        "uid" : "a4ab810f2d23e31f",
        "name" : "test_add_group.test_add_group[None:::]",
        "title" : "Test add group [None:::]",
        "time" : {
          "start" : 1543006802175,
          "stop" : 1543006807996,
          "duration" : 5821
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "d472455eb99d6486",
      "failure" : {
        "message" : "AssertionError: assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\n  Left contains more items, first extra item: None:name Z9:headeru:footeriiF VWjpYm\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x043E3410>\ndb = <fixture.db.DbFixture object at 0x03436AD0>\njson_groups = None:name Z9:headeru:footeriiF VWjpYm, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(\"When I add the group %s to the list\" % group):\n            app.group.create(group)\n        time.sleep(2)\n        with pytest.allure.step(\"the new group list is equal to the old list with added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\nE             Left contains more items, first extra item: None:name Z9:headeru:footeriiF VWjpYm\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:17: AssertionError"
      },
      "testCases" : [ {
        "uid" : "398df9d89e387c1e",
        "name" : "test_add_group.test_add_group[None:name Z9:headeru:footeriiF VWjpYm]",
        "title" : "Test add group [None:name Z9:headeru:footeriiF VWjpYm]",
        "time" : {
          "start" : 1543006807997,
          "stop" : 1543006810958,
          "duration" : 2961
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "577e29b08739774",
      "failure" : {
        "message" : "AssertionError: assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\n  Left contains more items, first extra item: None:name hKf 4Kcf:headerRcC TIsPCm:footer vFcw dAHgLhALTcL\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x043E3410>\ndb = <fixture.db.DbFixture object at 0x03436AD0>\njson_groups = None:name hKf 4Kcf:headerRcC TIsPCm:footer vFcw dAHgLhALTcL\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(\"When I add the group %s to the list\" % group):\n            app.group.create(group)\n        time.sleep(2)\n        with pytest.allure.step(\"the new group list is equal to the old list with added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\nE             Left contains more items, first extra item: None:name hKf 4Kcf:headerRcC TIsPCm:footer vFcw dAHgLhALTcL\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:17: AssertionError"
      },
      "testCases" : [ {
        "uid" : "692a1baa8dc37f01",
        "name" : "test_add_group.test_add_group[None:name hKf 4Kcf:headerRcC TIsPCm:footer vFcw dAHgLhALTcL]",
        "title" : "Test add group [None:name hKf 4Kcf:headerRcC TIsPCm:footer vFcw dAHgLhALTcL]",
        "time" : {
          "start" : 1543006810960,
          "stop" : 1543006813889,
          "duration" : 2929
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "abb83b1223e2f8cd",
      "failure" : {
        "message" : "AssertionError: assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\n  Left contains more items, first extra item: None:nameiB mB :headerGS k1Re6 8Cvk:footerEX F\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x043E3410>\ndb = <fixture.db.DbFixture object at 0x03436AD0>\njson_groups = None:nameiB mB :headerGS k1Re6 8Cvk:footerEX F, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(\"When I add the group %s to the list\" % group):\n            app.group.create(group)\n        time.sleep(2)\n        with pytest.allure.step(\"the new group list is equal to the old list with added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\nE             Left contains more items, first extra item: None:nameiB mB :headerGS k1Re6 8Cvk:footerEX F\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:17: AssertionError"
      },
      "testCases" : [ {
        "uid" : "87cdae6a2fbf125",
        "name" : "test_add_group.test_add_group[None:nameiB mB :headerGS k1Re6 8Cvk:footerEX F]",
        "title" : "Test add group [None:nameiB mB :headerGS k1Re6 8Cvk:footerEX F]",
        "time" : {
          "start" : 1543006813890,
          "stop" : 1543006816770,
          "duration" : 2880
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "d7bc58ae2dd54c40",
      "failure" : {
        "message" : "AssertionError: assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\n  Left contains more items, first extra item: None:namem:header8oyrL6L2t:footer6 Q29  Z WdCk \n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x043E3410>\ndb = <fixture.db.DbFixture object at 0x03436AD0>\njson_groups = None:namem:header8oyrL6L2t:footer6 Q29  Z WdCk , check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(\"When I add the group %s to the list\" % group):\n            app.group.create(group)\n        time.sleep(2)\n        with pytest.allure.step(\"the new group list is equal to the old list with added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\nE             Left contains more items, first extra item: None:namem:header8oyrL6L2t:footer6 Q29  Z WdCk \nE             Use -v to get the full diff\n\ntest\\test_add_group.py:17: AssertionError"
      },
      "testCases" : [ {
        "uid" : "d938c12bef7f5e4e",
        "name" : "test_add_group.test_add_group[None:namem:header8oyrL6L2t:footer6 Q29  Z WdCk ]",
        "title" : "Test add group [None:namem:header8oyrL6L2t:footer6 Q29  Z WdCk ]",
        "time" : {
          "start" : 1543006816771,
          "stop" : 1543006819652,
          "duration" : 2881
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "bd834241bb958ca1",
      "failure" : {
        "message" : "AssertionError: assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\n  Left contains more items, first extra item: None:nameJ6 WYh:header Ww :footerej7\n  Use -v to get the full diff",
        "stackTrace" : "app = <fixture.application.Application object at 0x043E3410>\ndb = <fixture.db.DbFixture object at 0x03436AD0>\njson_groups = None:nameJ6 WYh:header Ww :footerej7, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with pytest.allure.step(\"Given a group list\"):\n            old_groups = db.get_group_list()\n        with pytest.allure.step(\"When I add the group %s to the list\" % group):\n            app.group.create(group)\n        time.sleep(2)\n        with pytest.allure.step(\"the new group list is equal to the old list with added group\"):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           assert [95:name Z9:h...gLhALTcL, ...] == [95:name Z9:he...gLhALTcL, ...]\nE             Left contains more items, first extra item: None:nameJ6 WYh:header Ww :footerej7\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:17: AssertionError"
      },
      "testCases" : [ {
        "uid" : "eeb8cb22007ab5f1",
        "name" : "test_add_group.test_add_group[None:nameJ6 WYh:header Ww :footerej7]",
        "title" : "Test add group [None:nameJ6 WYh:header Ww :footerej7]",
        "time" : {
          "start" : 1543006819654,
          "stop" : 1543006822528,
          "duration" : 2874
        },
        "severity" : "NORMAL",
        "status" : "FAILED"
      } ]
    } ]
  }, {
    "title" : "Test defects",
    "status" : "BROKEN",
    "defects" : [ ]
  } ]
}